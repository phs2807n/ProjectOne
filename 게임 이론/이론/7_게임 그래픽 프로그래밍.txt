게임 그래픽 프로그래밍

정점(vertex) - 다양한 정보를 가지고 있는 점(위치, normal, UV 등등)

엣지(Edge) - 정점 두개를 연결한것
 삼각형, 폴리곤,  페이스 - 정점 세 계를 연결해서 만든 삼각형

메시(Mesh) - 삼각형들을 모아 만든 형태

조명(Light) 
 - 종류
   ㄴ Directional Light : 특정 방향으로 평행하게 빛을 내보내는 광원(방향
   ㄴ Point Light : 특정 위치에서 특정 반지름만큼 모든 방향으로 빛을 균등하게 내보내는 광원(위치, 반지름)
   ㄴ Spot Light : 특정 위치에서 특정 방향으로 바라보는 원뿔 모양으로 빛을 내보내는 광원(위치, 방향, 반지름, 원뿔각도(내각, 외각))
   ㄴ Ambient Light : 환경광, 씬의 모든 오브젝트에 동일하게 영향을 끼치는 전방향, 고정강도, 고정 색상의 광원
   ㄴ Area Light : 사각형 조명, 일정 영역이 빛나는 것 처럼 보인다.



셰이더(Shader)
 - 컴퓨터 그래픽스에서 3D 장면의 음영계산, 특수효과, 화면 후처리 등의 작업을 수행하기 위해 사용하는 소프트웨어 명령의 집합
 - GPU의 프로그래밍 가능한 랜더링 파이프라인을 사용하는 소프트웨어 명령의 집합

Unity셰이더용 언어
 - HLSL(High Level Shading Language), GLSL(OpenGL Shading Language), CG(C for Graphics)
 - Surface shader
 - Shader Graph

셰이더의 종류
 - 픽셀 셰이더(Pixel Shader) -> 프래그맨트 셰이더(Fragment Shader)
   - 스크린에 최종 출력되는 픽셀들의 색상이나 다른 특성들을 계산하여 변경하는데 사용되는 셰이더

 - 정점 셰이더(Vertex Shader)
   - 3D모델이 가지는 각 정점을 입력으로 받은 다음 변경하는데 사용되는 셰이더

 - 테셀레이션 셰이더
   - 필요에 따라 폴리곤을 더 작은 폴리곤으로 조각내어 여러 이득을 얻는 기법

 - 지오메트리 셰이더
   - 정점 셰이더가 수행된 이후 추가적으로 점, 선, 삼각형 같은 프리미티브를 생성



랜더링
 - 3D 월드를 이미지로 변환하는 작업

랜더링 파이프라인
 - 3D 오브젝트들로 구성된 월드를 디스플레이에서 출력하기 위해 2차원 래스터 이미지로 변경하는 단계적인 작업

Built-in : 기존의 유니티 랜더링 파이프라인
SRP(Scriptable Rendering Pipeline) - URP, HDRP

Forward Rendering : 고전적인 랜더링(Diffuse(난반사), Specular(정반사), Ambient)
Physically Based Rendering : 물리 기반 랜더링(Albedo, Metallic, Smoothness)

LOD(Level of Detail) - 3D 오브젝트를 표현할 때 가까이 있으면 하이 폴리곤 모델을 사용하고 멀어질 수록 로우 폴리콘 모델을 사용하는 기법









